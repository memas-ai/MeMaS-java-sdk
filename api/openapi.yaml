openapi: 3.0.3
info:
  contact:
    email: max.yu@memas.ai
  description: "This is the Control Plane client for MeMaS (Memory Management Service).\
    \ \nSee https://github.com/memas-ai/MeMaS for more details."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: MeMaS CP APIs
  version: 0.1.0
externalDocs:
  description: Find out more about MeMaS
  url: http://memas.ai
servers:
- url: /
tags:
- description: Control Plane APIs for Admins
  name: cp
paths:
  /cp/create_user:
    post:
      description: Create a namespace user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_200_response'
          description: Successful Operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_400_response'
          description: Failed operation
      summary: Create user
      tags:
      - cp
      x-content-type: application/json
      x-accepts: application/json
  /cp/create_corpus:
    post:
      description: Create a corpus under a namespace
      operationId: createCorpus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCorpus_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_200_response'
          description: Successful Operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUser_400_response'
          description: Failed operation
      summary: Create corpus
      tags:
      - cp
      x-content-type: application/json
      x-accepts: application/json
components:
  responses:
    OperationSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createUser_200_response'
      description: Successful Operation
  schemas:
    CorpusType:
      description: Type of a Corpus
      enum:
      - knowledge
      - conversation
      type: string
    CorpusPathname:
      description: "Full name of a corpus, specifying which namespace the corpus is\
        \ under. \nThe name takes on the format of \\\"<namespace_pathname>:<corpus_name>\\\
        \""
      example: memas:wikipedia
      type: string
    NamespacePathname:
      description: |-
        Full namespace name, where child namespaces are appended after their parents'
        names with '.'
      example: memas.chatbot.persona1
      type: string
    NamespaceDoesNotExistError:
      description: Error returned when the namespace object (corpus/user) does not
        exist
      properties:
        error_code:
          enum:
          - namespace_does_not_exist
          type: string
        msg:
          example: "\"memas:wikipedia\" does not exists, you need to create the resource\
            \ first"
          type: string
        details:
          type: string
      required:
      - error_code
      - msg
      type: object
    NamespaceExistError:
      description: Error returned when the namespace object (corpus/user) already
        exists
      properties:
        error_code:
          enum:
          - namespace_exists
          type: string
        msg:
          example: '"memas:wikipedia" already exists'
          type: string
        details:
          type: string
      required:
      - error_code
      - msg
      type: object
    NamespaceIllegalNameError:
      description: Error returned when the namespace name format/style is not allowed
      properties:
        error_code:
          enum:
          - namespace_illegal_name
          type: string
        msg:
          example: '"memas!wikipedia" is not a valid pathname'
          type: string
        details:
          type: string
      required:
      - error_code
      - msg
      type: object
    createUser_request:
      properties:
        namespace_pathname:
          description: |-
            Full namespace name, where child namespaces are appended after their parents'
            names with '.'
          example: memas.chatbot.persona1
          type: string
      required:
      - namespace_pathname
      type: object
    createUser_200_response:
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      type: object
    createUser_400_response:
      oneOf:
      - $ref: '#/components/schemas/NamespaceExistError'
      - $ref: '#/components/schemas/NamespaceIllegalNameError'
    createCorpus_request:
      properties:
        corpus_pathname:
          description: full corpus name
          example: memas.wikipedia
          type: string
        corpus_type:
          $ref: '#/components/schemas/CorpusType'
      required:
      - corpus_pathname
      - corpus_type
      type: object

